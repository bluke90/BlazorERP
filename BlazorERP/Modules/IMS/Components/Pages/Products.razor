@using BlazorERP.Data.Entities
@using BlazorERP.Modules.IMS.Components.PageComponents
@using BlazorERP.Utilities
@inherits ProductsBase

@page "/IMS/Products"



<ImsMenu/>
<MudGrid Spacing="5" Justify="Justify.SpaceBetween">
    <MudItem xs="12">
    <div class="flex">
        <!-- Card 1 -->

        @if (SelectedItem != null)
        {
            <div class="col">
                <MudCard>

                    <MudCardHeader>
                        <MudText Typo="Typo.h6"> <MudIcon Icon="@Icons.Material.Filled.Assignment" Size="Size.Medium"/>
                            Product Details
                        </MudText>
                    </MudCardHeader>

                    <MudCardContent Class="p-2">

                        <MudGrid>
                            <!-- Icon -->
                            <MudItem xs="5" Class="text-center">
                                <MudImage Src="@SelectedItemImageUrl" ObjectFit="ObjectFit.Contain" Height="200" Width="180"/>
                            </MudItem>

                            <MudItem xs="7">
                                <MudTextField Label="Name" @bind-Value="@SelectedItem.Name" Variant="Variant.Outlined"/>
                                <MudTextField Label="Category" @bind-Value="@SelectedItem.Category.Name" Variant="Variant.Outlined"/>
                                @if (@SelectedItem.IsActive)
                                {
                                    <MudText Class="mt-2" Color="Color.Success" Typo="Typo.body2"><MudIcon Class="align-bottom" Icon="@Icons.Material.Filled.CheckCircle" Color="Color.Success"/>Active</MudText>
                                }
                                else
                                {
                                    <MudText Class="mt-2" Color="Color.Error" Typo="Typo.body2"><MudIcon Icon="@Icons.Material.Filled.FlagCircle" Color="Color.Warning"/>Not Active</MudText>
                                }

                            </MudItem>

                        </MudGrid>
                        <MudDivider Class="gap"/>
                        <MudGrid>
                            <MudItem xs="6">
                                <MudTextField Label="SKU" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.QrCode2"
                                              @bind-Value="@SelectedItem.SKU" Variant="Variant.Text"/>
                                <MudTextField Label="Default Cost" AdornmentIcon="@Icons.Material.Filled.AttachMoney" Adornment="Adornment.Start"
                                              @bind-Value="@SelectedItem.DefaultCost" Variant="Variant.Text" InputMode="InputMode.numeric"/>
                                <MudTextField Label="Default Price" AdornmentIcon="@Icons.Material.Filled.AttachMoney" Adornment="Adornment.Start"
                                              @bind-Value="@SelectedItem.DefaultPrice" Variant="Variant.Text" InputMode="InputMode.numeric"/>
                            </MudItem>
                            <MudItem xs="6">
                                <MudTextField Label="Reorder Point" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.SyncProblem" 
                                              @bind-Value="@SelectedItem.ReorderPoint" Variant="Variant.Text"/>
                                <MudTextField Label="Total Stock" ReadOnly="true" Variant="Variant.Text" Adornment="Adornment.Start" AdornmentIcon="@Icons.Material.Filled.Warehouse"
                                              Value="@SelectedItem.Stocks.ToList().SumList(x => x.OnHand)"/>
                            </MudItem>
                        </MudGrid>


                    </MudCardContent>

                    <MudCardActions Class="pl-2 pr-2">
                        <MudGrid>
                            <MudItem xs="6">
                                <MudButton Variant="Variant.Filled" Color="Color.Success" FullWidth="true">
                                    <MudIcon Class="align-sub" Icon="@Icons.Material.Filled.Save"/>
                                    Save
                                </MudButton>
                            </MudItem>
                            <MudSpacer/>
                            <MudItem xs="6">
                                <MudButton Variant="Variant.Filled" Color="Color.Error" FullWidth="true">
                                    <MudIcon Class="align-sub" Icon="@Icons.Material.Filled.Cancel"/>
                                    Deactivate
                                </MudButton>
                            </MudItem>
                        </MudGrid>
                    </MudCardActions>

                </MudCard>
            </div>
        }

        <!-- Card 2 -->
        <div class="col">
            <MudCard>

                <MudCardHeader>
                    <MudGrid>
                        <MudItem md="8" xs="12">
                            <MudText Typo="Typo.h6"> <MudIcon Icon="@Icons.Material.Filled.TableView" Size="Size.Medium"/>
                                Product List
                            </MudText>
                        </MudItem>
                        <MudSpacer/>


                        <MudItem md="4" xs="8" Class="text-right">
                            <MudButton Variant="Variant.Filled" Color="Color.Dark" Size="Size.Small" OnClick="OpenNewProductDialog">
                                <MudIcon Icon="@Icons.Material.Filled.Add" Size="Size.Small"/>
                                New Item
                            </MudButton>
                        </MudItem>
                    </MudGrid>
                </MudCardHeader>
                <MudCardContent>
                    <MudTable T="Item" Items="Items" Breakpoint="Breakpoint.Sm" Dense="true" Elevation="2" Hover="true"
                              RowClass="cursor-pointer" OnRowClick="ProductSelected" Filter="new Func<Item, bool>(LocationFilterFunc)">
                        
                        <ToolBarContent>
                            <MudGrid>
                                <MudItem xs="4">
                                    <MudSelect Class="no-label" T="StorageLocation" @bind-SelectedValues="LocationFilter" @bind-Value="SelectedStorageLocation" MultiSelection="true"
                                               Dense="true" Variant="Variant.Filled" Text="Filter By Location" MaxHeight="180" Typo="Typo.body2" >
                                        @if (StorageLocations != null)
                                        {
                                            foreach (var store in StorageLocations)
                                            {
                                                <MudSelectItem Value="@store">@store.Code</MudSelectItem>
                                            }
                                        }
                                    </MudSelect>
                                </MudItem>
                            </MudGrid>
                        </ToolBarContent>
                        
                        <ColGroup>
                            <col style="width: 30%"/>
                            <col style="width: 28%"/>
                            <col style="width: 12%"/>
                            <col style="width: 12%"/>
                            <col style="width: 9%"/>
                            <col style="width: 9%"/>
                        </ColGroup>
                        <HeaderContent>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.Name)">Name</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.Category.Name)">Category</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.Stocks.ToList().SumList(s => s.OnHand))">Total Stock</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.Unit?.Name ?? string.Empty)">Unit</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.DefaultCost)">Def. Cost</MudTableSortLabel></MudTh>
                            <MudTh><MudTableSortLabel SortBy="new Func<Item, object>(x => x.DefaultPrice)">Def. Price</MudTableSortLabel></MudTh>
                        </HeaderContent>
                        <RowTemplate>
                            <MudTd DataLabel="Name">@context.Name</MudTd>
                            <MudTd DataLabel="Category">@context.Category.Name</MudTd>
                            <MudTd DataLabel="Total Stock">@context.Stocks.ToList().SumList(x => x.OnHand)</MudTd>
                            <MudTd DataLabel="Unit">@context.Unit?.Name</MudTd>
                            <MudTd DataLabel="Def. Cost">$@context.DefaultCost</MudTd>
                            <MudTd DataLabel="Def. Price">$@context.DefaultPrice</MudTd>
                        </RowTemplate>
                    </MudTable>
                </MudCardContent>

            </MudCard>



        </div>
    </div>
    </MudItem>
    @if (SelectedItem != null)
    {
        <MudItem xs="4">
            <ItemStockTable Item="SelectedItem"/>
        </MudItem>
    }
</MudGrid>
